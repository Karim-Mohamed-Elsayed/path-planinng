#include <vector>


class Node
{
public:
    int id;
    float x;
    float y;
    Node *parent;
    Node() : id(0), x(0), y(0), parent(nullptr) {}
    Node(int id, float x, float y)
    {
        this->id = id;
        this->x = x;
        this->y = y;
        this->parent = nullptr;
    }
};

vector<int> YourChosenAlgorithm(vector<vector<float>> obstacles, vector<vector<float>> nodes, vector<vector<float>> &pathNodes, vector<vector<int>> &edges)
{
    /* You should implement the algorithm you decided to use after conducting your own research over the problem statement. Please remember to do the following:
    1- Comment your code.
    2- Keep your code modular.
    3- Keep in mind memory efficiency.
    4- Use the the `pathNodes` variable to store the nodes generated by your algorithm in the form of
    id,x,y
    5- Use the `edges` variable to store the connections/edges between your nodes.
    6- This task is designed for a specific set of Path-Planning algorithms. If your chosen implementation REQUIRES changes in the task template, you are allowed to change ONLY if you provide explanation for all the changes you needed to make and why.
    */
}